{"version":3,"file":"static/js/754.1c92fbf7.chunk.js","mappings":"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","sources":["webpack://rtk-phonebook/./src/components/ContactForm/ContactForm.module.css?b5b2","components/ContactForm/ContactForm.js","webpack://rtk-phonebook/./src/components/Filter/Filter.module.css?fad1","components/Filter/Filter.js","webpack://rtk-phonebook/./src/components/ContactItem/ContactItem.module.css?be2b","components/ContactItem/ContactItem.js","webpack://rtk-phonebook/./src/components/ContactList/ContactList.module.css?1ce0","components/ContactList/ContactList.js","webpack://rtk-phonebook/./src/components/views/ContactsPage/ContactsPage.module.css?8bd5","components/views/ContactsPage/ContactsPage.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"form\":\"ContactForm_form__dhl+T\",\"label\":\"ContactForm_label__-cVXI\",\"button\":\"ContactForm_button__eSwX9\",\"input\":\"ContactForm_input__Bl93P\"};","import { useState } from 'react';\nimport {\n  useAddContactMutation,\n  useGetContactQuery,\n} from 'redux/contacts/contactApi';\nimport toast from 'react-hot-toast';\nimport s from './ContactForm.module.css';\n\nfunction ContactForm() {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n  const [addContact] = useAddContactMutation();\n  const { data: contacts, isSuccess } = useGetContactQuery();\n\n  const handleInputChange = e => {\n    const { name, value } = e.target;\n\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n      case 'number':\n        setNumber(value);\n        break;\n\n      default:\n        return;\n    }\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    const findContact = contacts?.some(contact =>\n      contact.name.toLowerCase().includes(name.toLowerCase())\n    );\n\n    if (findContact) {\n      toast.error(`${name} is already in contacts!!!`);\n      return;\n    }\n\n    addContact({ name, number });\n\n    if (isSuccess) {\n      toast.success(`${name} added to contact list`);\n    }\n\n    setName('');\n    setNumber('');\n  };\n\n  return (\n    <form className={s.form} onSubmit={handleSubmit}>\n      <label className={s.label}>\n        Name\n        <input\n          className={s.input}\n          type=\"text\"\n          name=\"name\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n          value={name}\n          onChange={handleInputChange}\n        />\n      </label>\n      <label className={s.label}>\n        Number\n        <input\n          className={s.input}\n          type=\"tel\"\n          name=\"number\"\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          required\n          value={number}\n          onChange={handleInputChange}\n        />\n      </label>\n      <button className={s.button} type=\"submit\">\n        Add contact\n      </button>\n    </form>\n  );\n}\n\nexport default ContactForm;\n","// extracted by mini-css-extract-plugin\nexport default {\"box\":\"Filter_box__d3XyP\",\"label\":\"Filter_label__vEd1E\",\"input\":\"Filter_input__N7T3z\",\"phone\":\"Filter_phone__CnYzj\"};","import { useDispatch, useSelector } from 'react-redux';\nimport { DebounceInput } from 'react-debounce-input';\nimport { changeFilter } from 'redux/contacts/filterSlice';\nimport s from './Filter.module.css';\nimport filterBook from '../../images/filter-book.jpg';\n\nfunction Filter() {\n  const value = useSelector(state => state.filter.value);\n\n  const dispatch = useDispatch();\n  return (\n    <div className={s.box}>\n      <img src={filterBook} alt=\"phonebook\" className={s.phone} />\n      <label className={s.label}>\n        Find contacts by name\n        <DebounceInput\n          className={s.input}\n          type=\"text\"\n          autoComplete=\"off\"\n          value={value}\n          minLength={1}\n          debounceTimeout={300}\n          onChange={e => dispatch(changeFilter(e.target.value))}\n        />\n      </label>\n    </div>\n  );\n}\n\nexport default Filter;\n","// extracted by mini-css-extract-plugin\nexport default {\"item\":\"ContactItem_item__gxreB\",\"button\":\"ContactItem_button__IRFBz\"};","import { ThreeDots } from 'react-loader-spinner';\nimport PropTypes from 'prop-types';\nimport { useDeleteContactMutation } from 'redux/contacts/contactApi';\nimport s from './ContactItem.module.css';\n\nfunction ContactItem({ contactId, name, number }) {\n  const [deleteContact, { isLoading }] = useDeleteContactMutation();\n\n  return (\n    <>\n      <li className={s.item}>\n        {name}: {number}\n        <button\n          disabled={isLoading}\n          className={s.button}\n          type=\"button\"\n          onClick={() => {\n            deleteContact(contactId);\n          }}\n        >\n          {isLoading ? (\n            <ThreeDots color=\"lightblue\" height={15} width={40} />\n          ) : (\n            'Delete'\n          )}\n        </button>\n      </li>\n    </>\n  );\n}\n\nContactItem.propTypes = {\n  contactId: PropTypes.string,\n  name: PropTypes.string,\n  number: PropTypes.string,\n};\n\nexport default ContactItem;\n","// extracted by mini-css-extract-plugin\nexport default {\"title\":\"ContactList_title__gpugJ\",\"list\":\"ContactList_list__csErn\",\"error\":\"ContactList_error__uCB2f\"};","import { useSelector } from 'react-redux';\nimport { useGetContactQuery } from 'redux/contacts/contactApi';\nimport { TailSpin } from 'react-loader-spinner';\nimport PropTypes from 'prop-types';\nimport ContactItem from '../ContactItem/ContactItem';\nimport s from './ContactList.module.css';\n\nexport default function ContactList() {\n  const { data: contacts, isFetching, error, isError } = useGetContactQuery();\n\n  const filter = useSelector(state => state.filter.value);\n  const getFiltredContacts = () => {\n    const normalizedFilter = filter.toLowerCase();\n    return contacts?.filter(contact =>\n      contact.name.toLowerCase().includes(normalizedFilter)\n    );\n  };\n  const filtredContacts = getFiltredContacts();\n\n  return (\n    <ul className={s.list}>\n      {isFetching && <TailSpin color=\"lightblue\" height={200} width={200} />}\n      {isError && (\n        <div\n          className={s.error}\n        >{`ERROR: ${error.status} ${error.data.message}`}</div>\n      )}\n      {filtredContacts &&\n        !isFetching &&\n        filtredContacts.map(({ id, name, number }) => (\n          <ContactItem key={id} contactId={id} name={name} number={number} />\n        ))}\n    </ul>\n  );\n}\n\nContactList.propTypes = {\n  id: PropTypes.number,\n  name: PropTypes.string,\n  number: PropTypes.string,\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"box\":\"ContactsPage_box__-TGd9\",\"phone\":\"ContactsPage_phone__wBgLS\",\"title\":\"ContactsPage_title__qgZSh\",\"flex\":\"ContactsPage_flex__3NX+5\"};","import { Toaster } from 'react-hot-toast';\nimport ContactForm from 'components/ContactForm/ContactForm';\nimport Filter from 'components/Filter/Filter';\nimport ContactList from 'components/ContactList/ContactList';\nimport s from './ContactsPage.module.css';\nimport phone from '../../../images/image-phone.png';\n\nexport default function ContactsPage() {\n  return (\n    <>\n      <Toaster position=\"top-center\" reverseOrder={false} />\n      <div className={s.box}>\n        <h2 className={s.title}>\n          <img src={phone} alt=\"phone\" className={s.phone} />\n          Contacts\n        </h2>\n      </div>\n\n      <div className={s.flex}>\n        <ContactForm />\n        <Filter />\n        <ContactList />\n      </div>\n    </>\n  );\n}\n"],"names":["useState","name","setName","number","setNumber","useAddContactMutation","addContact","useGetContactQuery","contacts","data","isSuccess","handleInputChange","e","target","value","className","s","onSubmit","preventDefault","some","contact","toLowerCase","includes","toast","type","pattern","title","required","onChange","useSelector","state","filter","dispatch","useDispatch","src","filterBook","alt","DebounceInput","autoComplete","minLength","debounceTimeout","changeFilter","contactId","useDeleteContactMutation","deleteContact","isLoading","disabled","onClick","color","height","width","ContactList","isFetching","error","isError","filtredContacts","normalizedFilter","getFiltredContacts","status","message","map","id","ContactsPage","position","reverseOrder","phone"],"sourceRoot":""}