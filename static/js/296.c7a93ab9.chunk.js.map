{"version":3,"file":"static/js/296.c7a93ab9.chunk.js","mappings":"oNACA,EAAuB,wBAAvB,EAAuD,yBAAvD,EAAyF,0BAAzF,EAA2H,yB,UCM5G,SAASA,IACtB,IAAMC,GAAWC,EAAAA,EAAAA,MACjB,GAA0BC,EAAAA,EAAAA,UAAS,IAAnC,eAAOC,EAAP,KAAcC,EAAd,KACA,GAAgCF,EAAAA,EAAAA,UAAS,IAAzC,eAAOG,EAAP,KAAiBC,EAAjB,KAEMC,EAAoB,SAAAC,GACxB,MAAwBA,EAAEC,OAAlBC,EAAR,EAAQA,KAAMC,EAAd,EAAcA,MAEd,OAAQD,GACN,IAAK,QACHN,EAASO,GACT,MACF,IAAK,WACHL,EAAYK,GACZ,MAEF,QACE,SAYN,OACE,iCACE,SAAC,KAAD,CAASC,SAAS,aAAaC,cAAc,KAC7C,kBAAMC,UAAWC,EAAQC,SAXR,SAAAR,GACnBA,EAAES,iBACFjB,GAASkB,EAAAA,EAAAA,IAAM,CAAEf,MAAAA,EAAOE,SAAAA,KACxBc,EAAAA,GAAAA,QAAc,wCACdf,EAAS,IACTE,EAAY,KAMV,WACE,mBAAOQ,UAAWC,EAAlB,mBAEE,kBACED,UAAWC,EACXK,KAAK,QACLV,KAAK,QACLW,UAAQ,EACRV,MAAOR,EACPmB,SAAUf,QAGd,mBAAOO,UAAWC,EAAlB,sBAEE,kBACED,UAAWC,EACXK,KAAK,WACLV,KAAK,WACLa,aAAa,MACbF,UAAQ,EACRV,MAAON,EACPiB,SAAUf,QAGd,mBAAQO,UAAWC,EAAUK,KAAK,SAAlC","sources":["webpack://rtk-phonebook/./src/components/views/LoginPage/LoginPage.module.css?8587","components/views/LoginPage/LoginPage.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"form\":\"LoginPage_form__Gv3n+\",\"label\":\"LoginPage_label__jGgtc\",\"button\":\"LoginPage_button__+n4yg\",\"input\":\"LoginPage_input__HEWaa\"};","import { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { Toaster } from 'react-hot-toast';\nimport { logIn } from 'redux/auth/auth-operations';\nimport toast from 'react-hot-toast';\nimport s from './LoginPage.module.css';\n\nexport default function LoginPage() {\n  const dispatch = useDispatch();\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n\n  const handleInputChange = e => {\n    const { name, value } = e.target;\n\n    switch (name) {\n      case 'email':\n        setEmail(value);\n        break;\n      case 'password':\n        setPassword(value);\n        break;\n\n      default:\n        return;\n    }\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    dispatch(logIn({ email, password }));\n    toast.success('Welcome to the application Phonebook');\n    setEmail('');\n    setPassword('');\n  };\n\n  return (\n    <>\n      <Toaster position=\"top-center\" reverseOrder={false} />\n      <form className={s.form} onSubmit={handleSubmit}>\n        <label className={s.label}>\n          Email\n          <input\n            className={s.input}\n            type=\"email\"\n            name=\"email\"\n            required\n            value={email}\n            onChange={handleInputChange}\n          />\n        </label>\n        <label className={s.label}>\n          Password\n          <input\n            className={s.input}\n            type=\"password\"\n            name=\"password\"\n            autoComplete=\"off\"\n            required\n            value={password}\n            onChange={handleInputChange}\n          />\n        </label>\n        <button className={s.button} type=\"submit\">\n          Login\n        </button>\n      </form>\n    </>\n  );\n}\n"],"names":["LoginPage","dispatch","useDispatch","useState","email","setEmail","password","setPassword","handleInputChange","e","target","name","value","position","reverseOrder","className","s","onSubmit","preventDefault","logIn","toast","type","required","onChange","autoComplete"],"sourceRoot":""}